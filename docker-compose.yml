version: "3"
services:
  traefik:
    image: traefik:2.1
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - --providers.docker
      - --api.dashboard=true
      - --api.insecure=true
      - --accesslog
      - --entrypoints.web.address=:80
      # - --log.level=DEBUG
    ports:
      # The HTTP(S) port
      - "80:80"
      # The traefik port
      # - "8889:8080"
    restart: always
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  api:
    image: ghcr.io/liningtonlab/npmrd_curator_api:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    # Use this if you want a Sqlite DB
    volumes:
      - ./db:/app/db/
      - ./backend/npmrd_curator:/app/npmrd_curator
    labels:
      - "traefik.http.routers.npmrd_curator-api.entrypoints=web"
      - "traefik.http.routers.npmrd_curator-api.rule=PathPrefix(`/api`)"
    # Use this if you want a postgres database
    # environment:
    #   - POSTGRES_URI="postgresql://user:password@postgresserver/db"
    command: "uvicorn --reload --host 0.0.0.0 --port 80 --log-level debug npmrd_curator.main:app"

  app:
    image: ghcr.io/liningtonlab/npmrd_curator_app:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./frontend:/app/
    labels:
      - "traefik.http.routers.npmrd_curator.entrypoints=web"
      - "traefik.http.routers.npmrd_curator.rule=PathPrefix(`/`)"
    command: "yarn dev"
